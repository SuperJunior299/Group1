"use strict";var express=require("express"),bodyParser=require("body-parser"),_require=require("mongodb"),MongoClient=_require.MongoClient,port=process.env.PORT||3e3,app=express(),mongoUrl="mongodb+srv://lekhanhtoan07:T14012003oan@server1.h0nl7gl.mongodb.net/",dbName="Web",collectionName="Test";app.use(bodyParser.urlencoded({extended:!0})),app.use(express.static("public")),app.post("/register",function(r,n){var t,o,s,a,i,u,l,c,p,d,m;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.body,o=t.fullName,s=t.dateOfBirth,a=t.email,i=t.username,u=t.phone,l=t.password,e.prev=1,c=new MongoClient(mongoUrl,{useUnifiedTopology:!0}),e.next=5,regeneratorRuntime.awrap(c.connect());case 5:return p=c.db(dbName),d=p.collection(collectionName),e.next=9,regeneratorRuntime.awrap(d.findOne({$or:[{email:a},{username:i}]}));case 9:if(e.sent)return e.abrupt("return",n.send("Email or username already exists"));e.next=12;break;case 12:return m={fullName:o,dateOfBirth:s,email:a,username:i,phone:u,password:l},e.next=15,regeneratorRuntime.awrap(d.insertOne(m));case 15:1===e.sent.insertedCount?n.send("Registration failed."):n.send("Registration successful! "),c.close(),e.next=24;break;case 20:e.prev=20,e.t0=e.catch(1),console.error(e.t0),n.status(500).send("Internal server error");case 24:case"end":return e.stop()}},null,null,[[1,20]])}),app.listen(port,function(){console.log("Server is running on port ".concat(port))});
//# sourceMappingURL=index.min.js.map
